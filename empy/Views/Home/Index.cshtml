@model empy.Core.Dtos.EmployeeClientDto
@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <p class="lead right">Easy access to your employees data.</p>
    <div class="input-group">
        <span id="btnGetEmployees" class="input-group-btn">
            <button class="btn btn-default" type="button">Get Employees</button>
        </span>
        <input id="inputEmployeeId" type="text" class="form-control" placeholder="Employee ID">
    </div><!-- /input-group -->
</div>

<table id="floors" class="table display" width="100%">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RoleName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ContractTypeName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HourlySalary)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MonthlySalary)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AnnualSalary)
            </th>
        </tr>
    </thead>
    <tbody id="tableContent">
        
    </tbody>
</table>

@section scripts
{
    <script>
        (function () {
            $(document).ready(function () {

                supplant = (function () {
                    if (!String.prototype.supplant) {
                        String.prototype.supplant = function (o) {
                            return this.replace(/{([^{}]*)}/g,
                                function (a, b) {
                                    var r;
                                    if (!o.hasOwnProperty(b)) { // If the placehoder is not found dont change it
                                        r = '{' + b + '}';
                                    }
                                    else if (o[b].hasOwnProperty('value')) { // Render properties of Indicator                    
                                        r = o[b].value;
                                    }
                                    else {                              // Render collection of subproperties of Indicator
                                        r = o[b];
                                    }
                                    return typeof r === 'string' || typeof r === 'number' ? r : a;
                                }
                            );
                        };
                    }
                }());

                $("#btnGetEmployees").click(function () {
                    table.renderWait();
                    texBox.ProcessId();
                });

                texBox = (function () {

                    function ProcessId() {
                        var input = parseInt($("#inputEmployeeId").val().replace(/[^\d.]/g, ''));
                        $("#inputEmployeeId").val(input);
                        if (isNaN(input)) {
                            $("#inputEmployeeId").val("");
                            server.getAll();
                        } else {
                            server.getId(input);
                        }
                    }

                    return {
                        ProcessId
                    }
                }());
                
                server = (function () {

                    function getAll() {
                        $.ajax({
                            url: "/api/Employees",
                            success: function (employees) {
                                table.clean();
                                employees.forEach(function (employee) {
                                    table.renderEmployee(employee);
                                });
                            }
                        });
                    }

                    function getId(id) {
                        $.ajax({
                            url: "/api/Employees/" + id,
                            success: function (employee) {
                                table.clean();
                                table.renderEmployee(employee);
                            },
                            error: function () {
                                table.clean();
                                table.renderEmpty();
                            }
                        });
                    }

                    return {
                        getAll,
                        getId
                    }
                }());
                
                table = (function () {

                    var rowTemplate = '<tr><td>{Id}</td><td>{Name}</td><td>{RoleName}</td><td>{ContractTypeName}</td><td class="currency">{HourlySalary}</td><td>{MonthlySalary}</td><td>{AnnualSalary}</td></tr>';

                    function clean() {
                        $("#tableContent").empty();
                    }

                    function renderEmployee(employee) {
                        $("#tableContent").append(rowTemplate.supplant(employee));
                    }

                    function renderEmpty() {
                        $("#tableContent").append("<tr><td align='center' colspan='7' class='text-danger'>There is no employees with such ID.</td></tr>");
                    }

                    function renderWait() {
                        clean();
                        $("#tableContent").append("<tr><td align='center' colspan='7' class='text-success'>Getting your data, please wait :)</td></tr>");
                    }

                    return {
                        clean,
                        renderEmployee,
                        renderEmpty,
                        renderWait
                    }
                }());
            });
    }());
    </script>
}

